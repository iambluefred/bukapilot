#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_54580470952589197) {
   out_54580470952589197[0] = 0;
   out_54580470952589197[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_54580470952589197[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_54580470952589197[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_54580470952589197[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_54580470952589197[5] = -sin(in_vec[1]);
   out_54580470952589197[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_54580470952589197[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_54580470952589197[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_54580470952589197[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_54580470952589197[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_54580470952589197[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_54580470952589197[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_54580470952589197[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_54580470952589197[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_54580470952589197[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_54580470952589197[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_54580470952589197[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2331509198973380424) {
   out_2331509198973380424[0] = delta_x[0] + nom_x[0];
   out_2331509198973380424[1] = delta_x[1] + nom_x[1];
   out_2331509198973380424[2] = delta_x[2] + nom_x[2];
   out_2331509198973380424[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2331509198973380424[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2331509198973380424[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2331509198973380424[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2331509198973380424[7] = delta_x[6] + nom_x[7];
   out_2331509198973380424[8] = delta_x[7] + nom_x[8];
   out_2331509198973380424[9] = delta_x[8] + nom_x[9];
   out_2331509198973380424[10] = delta_x[9] + nom_x[10];
   out_2331509198973380424[11] = delta_x[10] + nom_x[11];
   out_2331509198973380424[12] = delta_x[11] + nom_x[12];
   out_2331509198973380424[13] = delta_x[12] + nom_x[13];
   out_2331509198973380424[14] = delta_x[13] + nom_x[14];
   out_2331509198973380424[15] = delta_x[14] + nom_x[15];
   out_2331509198973380424[16] = delta_x[15] + nom_x[16];
   out_2331509198973380424[17] = delta_x[16] + nom_x[17];
   out_2331509198973380424[18] = delta_x[17] + nom_x[18];
   out_2331509198973380424[19] = delta_x[18] + nom_x[19];
   out_2331509198973380424[20] = delta_x[19] + nom_x[20];
   out_2331509198973380424[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8821701542344926915) {
   out_8821701542344926915[0] = -nom_x[0] + true_x[0];
   out_8821701542344926915[1] = -nom_x[1] + true_x[1];
   out_8821701542344926915[2] = -nom_x[2] + true_x[2];
   out_8821701542344926915[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8821701542344926915[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8821701542344926915[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8821701542344926915[6] = -nom_x[7] + true_x[7];
   out_8821701542344926915[7] = -nom_x[8] + true_x[8];
   out_8821701542344926915[8] = -nom_x[9] + true_x[9];
   out_8821701542344926915[9] = -nom_x[10] + true_x[10];
   out_8821701542344926915[10] = -nom_x[11] + true_x[11];
   out_8821701542344926915[11] = -nom_x[12] + true_x[12];
   out_8821701542344926915[12] = -nom_x[13] + true_x[13];
   out_8821701542344926915[13] = -nom_x[14] + true_x[14];
   out_8821701542344926915[14] = -nom_x[15] + true_x[15];
   out_8821701542344926915[15] = -nom_x[16] + true_x[16];
   out_8821701542344926915[16] = -nom_x[17] + true_x[17];
   out_8821701542344926915[17] = -nom_x[18] + true_x[18];
   out_8821701542344926915[18] = -nom_x[19] + true_x[19];
   out_8821701542344926915[19] = -nom_x[20] + true_x[20];
   out_8821701542344926915[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_9124059286284755301) {
   out_9124059286284755301[0] = 1.0;
   out_9124059286284755301[1] = 0;
   out_9124059286284755301[2] = 0;
   out_9124059286284755301[3] = 0;
   out_9124059286284755301[4] = 0;
   out_9124059286284755301[5] = 0;
   out_9124059286284755301[6] = 0;
   out_9124059286284755301[7] = 0;
   out_9124059286284755301[8] = 0;
   out_9124059286284755301[9] = 0;
   out_9124059286284755301[10] = 0;
   out_9124059286284755301[11] = 0;
   out_9124059286284755301[12] = 0;
   out_9124059286284755301[13] = 0;
   out_9124059286284755301[14] = 0;
   out_9124059286284755301[15] = 0;
   out_9124059286284755301[16] = 0;
   out_9124059286284755301[17] = 0;
   out_9124059286284755301[18] = 0;
   out_9124059286284755301[19] = 0;
   out_9124059286284755301[20] = 0;
   out_9124059286284755301[21] = 0;
   out_9124059286284755301[22] = 1.0;
   out_9124059286284755301[23] = 0;
   out_9124059286284755301[24] = 0;
   out_9124059286284755301[25] = 0;
   out_9124059286284755301[26] = 0;
   out_9124059286284755301[27] = 0;
   out_9124059286284755301[28] = 0;
   out_9124059286284755301[29] = 0;
   out_9124059286284755301[30] = 0;
   out_9124059286284755301[31] = 0;
   out_9124059286284755301[32] = 0;
   out_9124059286284755301[33] = 0;
   out_9124059286284755301[34] = 0;
   out_9124059286284755301[35] = 0;
   out_9124059286284755301[36] = 0;
   out_9124059286284755301[37] = 0;
   out_9124059286284755301[38] = 0;
   out_9124059286284755301[39] = 0;
   out_9124059286284755301[40] = 0;
   out_9124059286284755301[41] = 0;
   out_9124059286284755301[42] = 0;
   out_9124059286284755301[43] = 0;
   out_9124059286284755301[44] = 1.0;
   out_9124059286284755301[45] = 0;
   out_9124059286284755301[46] = 0;
   out_9124059286284755301[47] = 0;
   out_9124059286284755301[48] = 0;
   out_9124059286284755301[49] = 0;
   out_9124059286284755301[50] = 0;
   out_9124059286284755301[51] = 0;
   out_9124059286284755301[52] = 0;
   out_9124059286284755301[53] = 0;
   out_9124059286284755301[54] = 0;
   out_9124059286284755301[55] = 0;
   out_9124059286284755301[56] = 0;
   out_9124059286284755301[57] = 0;
   out_9124059286284755301[58] = 0;
   out_9124059286284755301[59] = 0;
   out_9124059286284755301[60] = 0;
   out_9124059286284755301[61] = 0;
   out_9124059286284755301[62] = 0;
   out_9124059286284755301[63] = 0;
   out_9124059286284755301[64] = 0;
   out_9124059286284755301[65] = 0;
   out_9124059286284755301[66] = -0.5*state[4];
   out_9124059286284755301[67] = -0.5*state[5];
   out_9124059286284755301[68] = -0.5*state[6];
   out_9124059286284755301[69] = 0;
   out_9124059286284755301[70] = 0;
   out_9124059286284755301[71] = 0;
   out_9124059286284755301[72] = 0;
   out_9124059286284755301[73] = 0;
   out_9124059286284755301[74] = 0;
   out_9124059286284755301[75] = 0;
   out_9124059286284755301[76] = 0;
   out_9124059286284755301[77] = 0;
   out_9124059286284755301[78] = 0;
   out_9124059286284755301[79] = 0;
   out_9124059286284755301[80] = 0;
   out_9124059286284755301[81] = 0;
   out_9124059286284755301[82] = 0;
   out_9124059286284755301[83] = 0;
   out_9124059286284755301[84] = 0;
   out_9124059286284755301[85] = 0;
   out_9124059286284755301[86] = 0;
   out_9124059286284755301[87] = 0.5*state[3];
   out_9124059286284755301[88] = 0.5*state[6];
   out_9124059286284755301[89] = -0.5*state[5];
   out_9124059286284755301[90] = 0;
   out_9124059286284755301[91] = 0;
   out_9124059286284755301[92] = 0;
   out_9124059286284755301[93] = 0;
   out_9124059286284755301[94] = 0;
   out_9124059286284755301[95] = 0;
   out_9124059286284755301[96] = 0;
   out_9124059286284755301[97] = 0;
   out_9124059286284755301[98] = 0;
   out_9124059286284755301[99] = 0;
   out_9124059286284755301[100] = 0;
   out_9124059286284755301[101] = 0;
   out_9124059286284755301[102] = 0;
   out_9124059286284755301[103] = 0;
   out_9124059286284755301[104] = 0;
   out_9124059286284755301[105] = 0;
   out_9124059286284755301[106] = 0;
   out_9124059286284755301[107] = 0;
   out_9124059286284755301[108] = -0.5*state[6];
   out_9124059286284755301[109] = 0.5*state[3];
   out_9124059286284755301[110] = 0.5*state[4];
   out_9124059286284755301[111] = 0;
   out_9124059286284755301[112] = 0;
   out_9124059286284755301[113] = 0;
   out_9124059286284755301[114] = 0;
   out_9124059286284755301[115] = 0;
   out_9124059286284755301[116] = 0;
   out_9124059286284755301[117] = 0;
   out_9124059286284755301[118] = 0;
   out_9124059286284755301[119] = 0;
   out_9124059286284755301[120] = 0;
   out_9124059286284755301[121] = 0;
   out_9124059286284755301[122] = 0;
   out_9124059286284755301[123] = 0;
   out_9124059286284755301[124] = 0;
   out_9124059286284755301[125] = 0;
   out_9124059286284755301[126] = 0;
   out_9124059286284755301[127] = 0;
   out_9124059286284755301[128] = 0;
   out_9124059286284755301[129] = 0.5*state[5];
   out_9124059286284755301[130] = -0.5*state[4];
   out_9124059286284755301[131] = 0.5*state[3];
   out_9124059286284755301[132] = 0;
   out_9124059286284755301[133] = 0;
   out_9124059286284755301[134] = 0;
   out_9124059286284755301[135] = 0;
   out_9124059286284755301[136] = 0;
   out_9124059286284755301[137] = 0;
   out_9124059286284755301[138] = 0;
   out_9124059286284755301[139] = 0;
   out_9124059286284755301[140] = 0;
   out_9124059286284755301[141] = 0;
   out_9124059286284755301[142] = 0;
   out_9124059286284755301[143] = 0;
   out_9124059286284755301[144] = 0;
   out_9124059286284755301[145] = 0;
   out_9124059286284755301[146] = 0;
   out_9124059286284755301[147] = 0;
   out_9124059286284755301[148] = 0;
   out_9124059286284755301[149] = 0;
   out_9124059286284755301[150] = 0;
   out_9124059286284755301[151] = 0;
   out_9124059286284755301[152] = 0;
   out_9124059286284755301[153] = 1.0;
   out_9124059286284755301[154] = 0;
   out_9124059286284755301[155] = 0;
   out_9124059286284755301[156] = 0;
   out_9124059286284755301[157] = 0;
   out_9124059286284755301[158] = 0;
   out_9124059286284755301[159] = 0;
   out_9124059286284755301[160] = 0;
   out_9124059286284755301[161] = 0;
   out_9124059286284755301[162] = 0;
   out_9124059286284755301[163] = 0;
   out_9124059286284755301[164] = 0;
   out_9124059286284755301[165] = 0;
   out_9124059286284755301[166] = 0;
   out_9124059286284755301[167] = 0;
   out_9124059286284755301[168] = 0;
   out_9124059286284755301[169] = 0;
   out_9124059286284755301[170] = 0;
   out_9124059286284755301[171] = 0;
   out_9124059286284755301[172] = 0;
   out_9124059286284755301[173] = 0;
   out_9124059286284755301[174] = 0;
   out_9124059286284755301[175] = 1.0;
   out_9124059286284755301[176] = 0;
   out_9124059286284755301[177] = 0;
   out_9124059286284755301[178] = 0;
   out_9124059286284755301[179] = 0;
   out_9124059286284755301[180] = 0;
   out_9124059286284755301[181] = 0;
   out_9124059286284755301[182] = 0;
   out_9124059286284755301[183] = 0;
   out_9124059286284755301[184] = 0;
   out_9124059286284755301[185] = 0;
   out_9124059286284755301[186] = 0;
   out_9124059286284755301[187] = 0;
   out_9124059286284755301[188] = 0;
   out_9124059286284755301[189] = 0;
   out_9124059286284755301[190] = 0;
   out_9124059286284755301[191] = 0;
   out_9124059286284755301[192] = 0;
   out_9124059286284755301[193] = 0;
   out_9124059286284755301[194] = 0;
   out_9124059286284755301[195] = 0;
   out_9124059286284755301[196] = 0;
   out_9124059286284755301[197] = 1.0;
   out_9124059286284755301[198] = 0;
   out_9124059286284755301[199] = 0;
   out_9124059286284755301[200] = 0;
   out_9124059286284755301[201] = 0;
   out_9124059286284755301[202] = 0;
   out_9124059286284755301[203] = 0;
   out_9124059286284755301[204] = 0;
   out_9124059286284755301[205] = 0;
   out_9124059286284755301[206] = 0;
   out_9124059286284755301[207] = 0;
   out_9124059286284755301[208] = 0;
   out_9124059286284755301[209] = 0;
   out_9124059286284755301[210] = 0;
   out_9124059286284755301[211] = 0;
   out_9124059286284755301[212] = 0;
   out_9124059286284755301[213] = 0;
   out_9124059286284755301[214] = 0;
   out_9124059286284755301[215] = 0;
   out_9124059286284755301[216] = 0;
   out_9124059286284755301[217] = 0;
   out_9124059286284755301[218] = 0;
   out_9124059286284755301[219] = 1.0;
   out_9124059286284755301[220] = 0;
   out_9124059286284755301[221] = 0;
   out_9124059286284755301[222] = 0;
   out_9124059286284755301[223] = 0;
   out_9124059286284755301[224] = 0;
   out_9124059286284755301[225] = 0;
   out_9124059286284755301[226] = 0;
   out_9124059286284755301[227] = 0;
   out_9124059286284755301[228] = 0;
   out_9124059286284755301[229] = 0;
   out_9124059286284755301[230] = 0;
   out_9124059286284755301[231] = 0;
   out_9124059286284755301[232] = 0;
   out_9124059286284755301[233] = 0;
   out_9124059286284755301[234] = 0;
   out_9124059286284755301[235] = 0;
   out_9124059286284755301[236] = 0;
   out_9124059286284755301[237] = 0;
   out_9124059286284755301[238] = 0;
   out_9124059286284755301[239] = 0;
   out_9124059286284755301[240] = 0;
   out_9124059286284755301[241] = 1.0;
   out_9124059286284755301[242] = 0;
   out_9124059286284755301[243] = 0;
   out_9124059286284755301[244] = 0;
   out_9124059286284755301[245] = 0;
   out_9124059286284755301[246] = 0;
   out_9124059286284755301[247] = 0;
   out_9124059286284755301[248] = 0;
   out_9124059286284755301[249] = 0;
   out_9124059286284755301[250] = 0;
   out_9124059286284755301[251] = 0;
   out_9124059286284755301[252] = 0;
   out_9124059286284755301[253] = 0;
   out_9124059286284755301[254] = 0;
   out_9124059286284755301[255] = 0;
   out_9124059286284755301[256] = 0;
   out_9124059286284755301[257] = 0;
   out_9124059286284755301[258] = 0;
   out_9124059286284755301[259] = 0;
   out_9124059286284755301[260] = 0;
   out_9124059286284755301[261] = 0;
   out_9124059286284755301[262] = 0;
   out_9124059286284755301[263] = 1.0;
   out_9124059286284755301[264] = 0;
   out_9124059286284755301[265] = 0;
   out_9124059286284755301[266] = 0;
   out_9124059286284755301[267] = 0;
   out_9124059286284755301[268] = 0;
   out_9124059286284755301[269] = 0;
   out_9124059286284755301[270] = 0;
   out_9124059286284755301[271] = 0;
   out_9124059286284755301[272] = 0;
   out_9124059286284755301[273] = 0;
   out_9124059286284755301[274] = 0;
   out_9124059286284755301[275] = 0;
   out_9124059286284755301[276] = 0;
   out_9124059286284755301[277] = 0;
   out_9124059286284755301[278] = 0;
   out_9124059286284755301[279] = 0;
   out_9124059286284755301[280] = 0;
   out_9124059286284755301[281] = 0;
   out_9124059286284755301[282] = 0;
   out_9124059286284755301[283] = 0;
   out_9124059286284755301[284] = 0;
   out_9124059286284755301[285] = 1.0;
   out_9124059286284755301[286] = 0;
   out_9124059286284755301[287] = 0;
   out_9124059286284755301[288] = 0;
   out_9124059286284755301[289] = 0;
   out_9124059286284755301[290] = 0;
   out_9124059286284755301[291] = 0;
   out_9124059286284755301[292] = 0;
   out_9124059286284755301[293] = 0;
   out_9124059286284755301[294] = 0;
   out_9124059286284755301[295] = 0;
   out_9124059286284755301[296] = 0;
   out_9124059286284755301[297] = 0;
   out_9124059286284755301[298] = 0;
   out_9124059286284755301[299] = 0;
   out_9124059286284755301[300] = 0;
   out_9124059286284755301[301] = 0;
   out_9124059286284755301[302] = 0;
   out_9124059286284755301[303] = 0;
   out_9124059286284755301[304] = 0;
   out_9124059286284755301[305] = 0;
   out_9124059286284755301[306] = 0;
   out_9124059286284755301[307] = 1.0;
   out_9124059286284755301[308] = 0;
   out_9124059286284755301[309] = 0;
   out_9124059286284755301[310] = 0;
   out_9124059286284755301[311] = 0;
   out_9124059286284755301[312] = 0;
   out_9124059286284755301[313] = 0;
   out_9124059286284755301[314] = 0;
   out_9124059286284755301[315] = 0;
   out_9124059286284755301[316] = 0;
   out_9124059286284755301[317] = 0;
   out_9124059286284755301[318] = 0;
   out_9124059286284755301[319] = 0;
   out_9124059286284755301[320] = 0;
   out_9124059286284755301[321] = 0;
   out_9124059286284755301[322] = 0;
   out_9124059286284755301[323] = 0;
   out_9124059286284755301[324] = 0;
   out_9124059286284755301[325] = 0;
   out_9124059286284755301[326] = 0;
   out_9124059286284755301[327] = 0;
   out_9124059286284755301[328] = 0;
   out_9124059286284755301[329] = 1.0;
   out_9124059286284755301[330] = 0;
   out_9124059286284755301[331] = 0;
   out_9124059286284755301[332] = 0;
   out_9124059286284755301[333] = 0;
   out_9124059286284755301[334] = 0;
   out_9124059286284755301[335] = 0;
   out_9124059286284755301[336] = 0;
   out_9124059286284755301[337] = 0;
   out_9124059286284755301[338] = 0;
   out_9124059286284755301[339] = 0;
   out_9124059286284755301[340] = 0;
   out_9124059286284755301[341] = 0;
   out_9124059286284755301[342] = 0;
   out_9124059286284755301[343] = 0;
   out_9124059286284755301[344] = 0;
   out_9124059286284755301[345] = 0;
   out_9124059286284755301[346] = 0;
   out_9124059286284755301[347] = 0;
   out_9124059286284755301[348] = 0;
   out_9124059286284755301[349] = 0;
   out_9124059286284755301[350] = 0;
   out_9124059286284755301[351] = 1.0;
   out_9124059286284755301[352] = 0;
   out_9124059286284755301[353] = 0;
   out_9124059286284755301[354] = 0;
   out_9124059286284755301[355] = 0;
   out_9124059286284755301[356] = 0;
   out_9124059286284755301[357] = 0;
   out_9124059286284755301[358] = 0;
   out_9124059286284755301[359] = 0;
   out_9124059286284755301[360] = 0;
   out_9124059286284755301[361] = 0;
   out_9124059286284755301[362] = 0;
   out_9124059286284755301[363] = 0;
   out_9124059286284755301[364] = 0;
   out_9124059286284755301[365] = 0;
   out_9124059286284755301[366] = 0;
   out_9124059286284755301[367] = 0;
   out_9124059286284755301[368] = 0;
   out_9124059286284755301[369] = 0;
   out_9124059286284755301[370] = 0;
   out_9124059286284755301[371] = 0;
   out_9124059286284755301[372] = 0;
   out_9124059286284755301[373] = 1.0;
   out_9124059286284755301[374] = 0;
   out_9124059286284755301[375] = 0;
   out_9124059286284755301[376] = 0;
   out_9124059286284755301[377] = 0;
   out_9124059286284755301[378] = 0;
   out_9124059286284755301[379] = 0;
   out_9124059286284755301[380] = 0;
   out_9124059286284755301[381] = 0;
   out_9124059286284755301[382] = 0;
   out_9124059286284755301[383] = 0;
   out_9124059286284755301[384] = 0;
   out_9124059286284755301[385] = 0;
   out_9124059286284755301[386] = 0;
   out_9124059286284755301[387] = 0;
   out_9124059286284755301[388] = 0;
   out_9124059286284755301[389] = 0;
   out_9124059286284755301[390] = 0;
   out_9124059286284755301[391] = 0;
   out_9124059286284755301[392] = 0;
   out_9124059286284755301[393] = 0;
   out_9124059286284755301[394] = 0;
   out_9124059286284755301[395] = 1.0;
   out_9124059286284755301[396] = 0;
   out_9124059286284755301[397] = 0;
   out_9124059286284755301[398] = 0;
   out_9124059286284755301[399] = 0;
   out_9124059286284755301[400] = 0;
   out_9124059286284755301[401] = 0;
   out_9124059286284755301[402] = 0;
   out_9124059286284755301[403] = 0;
   out_9124059286284755301[404] = 0;
   out_9124059286284755301[405] = 0;
   out_9124059286284755301[406] = 0;
   out_9124059286284755301[407] = 0;
   out_9124059286284755301[408] = 0;
   out_9124059286284755301[409] = 0;
   out_9124059286284755301[410] = 0;
   out_9124059286284755301[411] = 0;
   out_9124059286284755301[412] = 0;
   out_9124059286284755301[413] = 0;
   out_9124059286284755301[414] = 0;
   out_9124059286284755301[415] = 0;
   out_9124059286284755301[416] = 0;
   out_9124059286284755301[417] = 1.0;
   out_9124059286284755301[418] = 0;
   out_9124059286284755301[419] = 0;
   out_9124059286284755301[420] = 0;
   out_9124059286284755301[421] = 0;
   out_9124059286284755301[422] = 0;
   out_9124059286284755301[423] = 0;
   out_9124059286284755301[424] = 0;
   out_9124059286284755301[425] = 0;
   out_9124059286284755301[426] = 0;
   out_9124059286284755301[427] = 0;
   out_9124059286284755301[428] = 0;
   out_9124059286284755301[429] = 0;
   out_9124059286284755301[430] = 0;
   out_9124059286284755301[431] = 0;
   out_9124059286284755301[432] = 0;
   out_9124059286284755301[433] = 0;
   out_9124059286284755301[434] = 0;
   out_9124059286284755301[435] = 0;
   out_9124059286284755301[436] = 0;
   out_9124059286284755301[437] = 0;
   out_9124059286284755301[438] = 0;
   out_9124059286284755301[439] = 1.0;
   out_9124059286284755301[440] = 0;
   out_9124059286284755301[441] = 0;
   out_9124059286284755301[442] = 0;
   out_9124059286284755301[443] = 0;
   out_9124059286284755301[444] = 0;
   out_9124059286284755301[445] = 0;
   out_9124059286284755301[446] = 0;
   out_9124059286284755301[447] = 0;
   out_9124059286284755301[448] = 0;
   out_9124059286284755301[449] = 0;
   out_9124059286284755301[450] = 0;
   out_9124059286284755301[451] = 0;
   out_9124059286284755301[452] = 0;
   out_9124059286284755301[453] = 0;
   out_9124059286284755301[454] = 0;
   out_9124059286284755301[455] = 0;
   out_9124059286284755301[456] = 0;
   out_9124059286284755301[457] = 0;
   out_9124059286284755301[458] = 0;
   out_9124059286284755301[459] = 0;
   out_9124059286284755301[460] = 0;
   out_9124059286284755301[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2050961891249539931) {
   out_2050961891249539931[0] = dt*state[7] + state[0];
   out_2050961891249539931[1] = dt*state[8] + state[1];
   out_2050961891249539931[2] = dt*state[9] + state[2];
   out_2050961891249539931[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2050961891249539931[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2050961891249539931[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2050961891249539931[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2050961891249539931[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2050961891249539931[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2050961891249539931[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2050961891249539931[10] = state[10];
   out_2050961891249539931[11] = state[11];
   out_2050961891249539931[12] = state[12];
   out_2050961891249539931[13] = state[13];
   out_2050961891249539931[14] = state[14];
   out_2050961891249539931[15] = state[15];
   out_2050961891249539931[16] = state[16];
   out_2050961891249539931[17] = state[17];
   out_2050961891249539931[18] = state[18];
   out_2050961891249539931[19] = state[19];
   out_2050961891249539931[20] = state[20];
   out_2050961891249539931[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8407074663770280591) {
   out_8407074663770280591[0] = 1;
   out_8407074663770280591[1] = 0;
   out_8407074663770280591[2] = 0;
   out_8407074663770280591[3] = 0;
   out_8407074663770280591[4] = 0;
   out_8407074663770280591[5] = 0;
   out_8407074663770280591[6] = dt;
   out_8407074663770280591[7] = 0;
   out_8407074663770280591[8] = 0;
   out_8407074663770280591[9] = 0;
   out_8407074663770280591[10] = 0;
   out_8407074663770280591[11] = 0;
   out_8407074663770280591[12] = 0;
   out_8407074663770280591[13] = 0;
   out_8407074663770280591[14] = 0;
   out_8407074663770280591[15] = 0;
   out_8407074663770280591[16] = 0;
   out_8407074663770280591[17] = 0;
   out_8407074663770280591[18] = 0;
   out_8407074663770280591[19] = 0;
   out_8407074663770280591[20] = 0;
   out_8407074663770280591[21] = 0;
   out_8407074663770280591[22] = 1;
   out_8407074663770280591[23] = 0;
   out_8407074663770280591[24] = 0;
   out_8407074663770280591[25] = 0;
   out_8407074663770280591[26] = 0;
   out_8407074663770280591[27] = 0;
   out_8407074663770280591[28] = dt;
   out_8407074663770280591[29] = 0;
   out_8407074663770280591[30] = 0;
   out_8407074663770280591[31] = 0;
   out_8407074663770280591[32] = 0;
   out_8407074663770280591[33] = 0;
   out_8407074663770280591[34] = 0;
   out_8407074663770280591[35] = 0;
   out_8407074663770280591[36] = 0;
   out_8407074663770280591[37] = 0;
   out_8407074663770280591[38] = 0;
   out_8407074663770280591[39] = 0;
   out_8407074663770280591[40] = 0;
   out_8407074663770280591[41] = 0;
   out_8407074663770280591[42] = 0;
   out_8407074663770280591[43] = 0;
   out_8407074663770280591[44] = 1;
   out_8407074663770280591[45] = 0;
   out_8407074663770280591[46] = 0;
   out_8407074663770280591[47] = 0;
   out_8407074663770280591[48] = 0;
   out_8407074663770280591[49] = 0;
   out_8407074663770280591[50] = dt;
   out_8407074663770280591[51] = 0;
   out_8407074663770280591[52] = 0;
   out_8407074663770280591[53] = 0;
   out_8407074663770280591[54] = 0;
   out_8407074663770280591[55] = 0;
   out_8407074663770280591[56] = 0;
   out_8407074663770280591[57] = 0;
   out_8407074663770280591[58] = 0;
   out_8407074663770280591[59] = 0;
   out_8407074663770280591[60] = 0;
   out_8407074663770280591[61] = 0;
   out_8407074663770280591[62] = 0;
   out_8407074663770280591[63] = 0;
   out_8407074663770280591[64] = 0;
   out_8407074663770280591[65] = 0;
   out_8407074663770280591[66] = 1;
   out_8407074663770280591[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8407074663770280591[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8407074663770280591[69] = 0;
   out_8407074663770280591[70] = 0;
   out_8407074663770280591[71] = 0;
   out_8407074663770280591[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8407074663770280591[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8407074663770280591[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8407074663770280591[75] = 0;
   out_8407074663770280591[76] = 0;
   out_8407074663770280591[77] = 0;
   out_8407074663770280591[78] = 0;
   out_8407074663770280591[79] = 0;
   out_8407074663770280591[80] = 0;
   out_8407074663770280591[81] = 0;
   out_8407074663770280591[82] = 0;
   out_8407074663770280591[83] = 0;
   out_8407074663770280591[84] = 0;
   out_8407074663770280591[85] = 0;
   out_8407074663770280591[86] = 0;
   out_8407074663770280591[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8407074663770280591[88] = 1;
   out_8407074663770280591[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8407074663770280591[90] = 0;
   out_8407074663770280591[91] = 0;
   out_8407074663770280591[92] = 0;
   out_8407074663770280591[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8407074663770280591[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8407074663770280591[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8407074663770280591[96] = 0;
   out_8407074663770280591[97] = 0;
   out_8407074663770280591[98] = 0;
   out_8407074663770280591[99] = 0;
   out_8407074663770280591[100] = 0;
   out_8407074663770280591[101] = 0;
   out_8407074663770280591[102] = 0;
   out_8407074663770280591[103] = 0;
   out_8407074663770280591[104] = 0;
   out_8407074663770280591[105] = 0;
   out_8407074663770280591[106] = 0;
   out_8407074663770280591[107] = 0;
   out_8407074663770280591[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8407074663770280591[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8407074663770280591[110] = 1;
   out_8407074663770280591[111] = 0;
   out_8407074663770280591[112] = 0;
   out_8407074663770280591[113] = 0;
   out_8407074663770280591[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8407074663770280591[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8407074663770280591[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8407074663770280591[117] = 0;
   out_8407074663770280591[118] = 0;
   out_8407074663770280591[119] = 0;
   out_8407074663770280591[120] = 0;
   out_8407074663770280591[121] = 0;
   out_8407074663770280591[122] = 0;
   out_8407074663770280591[123] = 0;
   out_8407074663770280591[124] = 0;
   out_8407074663770280591[125] = 0;
   out_8407074663770280591[126] = 0;
   out_8407074663770280591[127] = 0;
   out_8407074663770280591[128] = 0;
   out_8407074663770280591[129] = 0;
   out_8407074663770280591[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8407074663770280591[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8407074663770280591[132] = 1;
   out_8407074663770280591[133] = 0;
   out_8407074663770280591[134] = 0;
   out_8407074663770280591[135] = 0;
   out_8407074663770280591[136] = 0;
   out_8407074663770280591[137] = 0;
   out_8407074663770280591[138] = 0;
   out_8407074663770280591[139] = 0;
   out_8407074663770280591[140] = 0;
   out_8407074663770280591[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8407074663770280591[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8407074663770280591[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8407074663770280591[144] = 0;
   out_8407074663770280591[145] = 0;
   out_8407074663770280591[146] = 0;
   out_8407074663770280591[147] = 0;
   out_8407074663770280591[148] = 0;
   out_8407074663770280591[149] = 0;
   out_8407074663770280591[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8407074663770280591[151] = 0;
   out_8407074663770280591[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8407074663770280591[153] = 0;
   out_8407074663770280591[154] = 1;
   out_8407074663770280591[155] = 0;
   out_8407074663770280591[156] = 0;
   out_8407074663770280591[157] = 0;
   out_8407074663770280591[158] = 0;
   out_8407074663770280591[159] = 0;
   out_8407074663770280591[160] = 0;
   out_8407074663770280591[161] = 0;
   out_8407074663770280591[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8407074663770280591[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8407074663770280591[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8407074663770280591[165] = 0;
   out_8407074663770280591[166] = 0;
   out_8407074663770280591[167] = 0;
   out_8407074663770280591[168] = 0;
   out_8407074663770280591[169] = 0;
   out_8407074663770280591[170] = 0;
   out_8407074663770280591[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8407074663770280591[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8407074663770280591[173] = 0;
   out_8407074663770280591[174] = 0;
   out_8407074663770280591[175] = 0;
   out_8407074663770280591[176] = 1;
   out_8407074663770280591[177] = 0;
   out_8407074663770280591[178] = 0;
   out_8407074663770280591[179] = 0;
   out_8407074663770280591[180] = 0;
   out_8407074663770280591[181] = 0;
   out_8407074663770280591[182] = 0;
   out_8407074663770280591[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8407074663770280591[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8407074663770280591[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8407074663770280591[186] = 0;
   out_8407074663770280591[187] = 0;
   out_8407074663770280591[188] = 0;
   out_8407074663770280591[189] = 0;
   out_8407074663770280591[190] = 0;
   out_8407074663770280591[191] = 0;
   out_8407074663770280591[192] = 0;
   out_8407074663770280591[193] = 0;
   out_8407074663770280591[194] = 0;
   out_8407074663770280591[195] = 0;
   out_8407074663770280591[196] = 0;
   out_8407074663770280591[197] = 0;
   out_8407074663770280591[198] = 1;
   out_8407074663770280591[199] = 0;
   out_8407074663770280591[200] = 0;
   out_8407074663770280591[201] = 0;
   out_8407074663770280591[202] = 0;
   out_8407074663770280591[203] = 0;
   out_8407074663770280591[204] = 0;
   out_8407074663770280591[205] = 0;
   out_8407074663770280591[206] = 0;
   out_8407074663770280591[207] = 0;
   out_8407074663770280591[208] = 0;
   out_8407074663770280591[209] = 0;
   out_8407074663770280591[210] = 0;
   out_8407074663770280591[211] = 0;
   out_8407074663770280591[212] = 0;
   out_8407074663770280591[213] = 0;
   out_8407074663770280591[214] = 0;
   out_8407074663770280591[215] = 0;
   out_8407074663770280591[216] = 0;
   out_8407074663770280591[217] = 0;
   out_8407074663770280591[218] = 0;
   out_8407074663770280591[219] = 0;
   out_8407074663770280591[220] = 1;
   out_8407074663770280591[221] = 0;
   out_8407074663770280591[222] = 0;
   out_8407074663770280591[223] = 0;
   out_8407074663770280591[224] = 0;
   out_8407074663770280591[225] = 0;
   out_8407074663770280591[226] = 0;
   out_8407074663770280591[227] = 0;
   out_8407074663770280591[228] = 0;
   out_8407074663770280591[229] = 0;
   out_8407074663770280591[230] = 0;
   out_8407074663770280591[231] = 0;
   out_8407074663770280591[232] = 0;
   out_8407074663770280591[233] = 0;
   out_8407074663770280591[234] = 0;
   out_8407074663770280591[235] = 0;
   out_8407074663770280591[236] = 0;
   out_8407074663770280591[237] = 0;
   out_8407074663770280591[238] = 0;
   out_8407074663770280591[239] = 0;
   out_8407074663770280591[240] = 0;
   out_8407074663770280591[241] = 0;
   out_8407074663770280591[242] = 1;
   out_8407074663770280591[243] = 0;
   out_8407074663770280591[244] = 0;
   out_8407074663770280591[245] = 0;
   out_8407074663770280591[246] = 0;
   out_8407074663770280591[247] = 0;
   out_8407074663770280591[248] = 0;
   out_8407074663770280591[249] = 0;
   out_8407074663770280591[250] = 0;
   out_8407074663770280591[251] = 0;
   out_8407074663770280591[252] = 0;
   out_8407074663770280591[253] = 0;
   out_8407074663770280591[254] = 0;
   out_8407074663770280591[255] = 0;
   out_8407074663770280591[256] = 0;
   out_8407074663770280591[257] = 0;
   out_8407074663770280591[258] = 0;
   out_8407074663770280591[259] = 0;
   out_8407074663770280591[260] = 0;
   out_8407074663770280591[261] = 0;
   out_8407074663770280591[262] = 0;
   out_8407074663770280591[263] = 0;
   out_8407074663770280591[264] = 1;
   out_8407074663770280591[265] = 0;
   out_8407074663770280591[266] = 0;
   out_8407074663770280591[267] = 0;
   out_8407074663770280591[268] = 0;
   out_8407074663770280591[269] = 0;
   out_8407074663770280591[270] = 0;
   out_8407074663770280591[271] = 0;
   out_8407074663770280591[272] = 0;
   out_8407074663770280591[273] = 0;
   out_8407074663770280591[274] = 0;
   out_8407074663770280591[275] = 0;
   out_8407074663770280591[276] = 0;
   out_8407074663770280591[277] = 0;
   out_8407074663770280591[278] = 0;
   out_8407074663770280591[279] = 0;
   out_8407074663770280591[280] = 0;
   out_8407074663770280591[281] = 0;
   out_8407074663770280591[282] = 0;
   out_8407074663770280591[283] = 0;
   out_8407074663770280591[284] = 0;
   out_8407074663770280591[285] = 0;
   out_8407074663770280591[286] = 1;
   out_8407074663770280591[287] = 0;
   out_8407074663770280591[288] = 0;
   out_8407074663770280591[289] = 0;
   out_8407074663770280591[290] = 0;
   out_8407074663770280591[291] = 0;
   out_8407074663770280591[292] = 0;
   out_8407074663770280591[293] = 0;
   out_8407074663770280591[294] = 0;
   out_8407074663770280591[295] = 0;
   out_8407074663770280591[296] = 0;
   out_8407074663770280591[297] = 0;
   out_8407074663770280591[298] = 0;
   out_8407074663770280591[299] = 0;
   out_8407074663770280591[300] = 0;
   out_8407074663770280591[301] = 0;
   out_8407074663770280591[302] = 0;
   out_8407074663770280591[303] = 0;
   out_8407074663770280591[304] = 0;
   out_8407074663770280591[305] = 0;
   out_8407074663770280591[306] = 0;
   out_8407074663770280591[307] = 0;
   out_8407074663770280591[308] = 1;
   out_8407074663770280591[309] = 0;
   out_8407074663770280591[310] = 0;
   out_8407074663770280591[311] = 0;
   out_8407074663770280591[312] = 0;
   out_8407074663770280591[313] = 0;
   out_8407074663770280591[314] = 0;
   out_8407074663770280591[315] = 0;
   out_8407074663770280591[316] = 0;
   out_8407074663770280591[317] = 0;
   out_8407074663770280591[318] = 0;
   out_8407074663770280591[319] = 0;
   out_8407074663770280591[320] = 0;
   out_8407074663770280591[321] = 0;
   out_8407074663770280591[322] = 0;
   out_8407074663770280591[323] = 0;
   out_8407074663770280591[324] = 0;
   out_8407074663770280591[325] = 0;
   out_8407074663770280591[326] = 0;
   out_8407074663770280591[327] = 0;
   out_8407074663770280591[328] = 0;
   out_8407074663770280591[329] = 0;
   out_8407074663770280591[330] = 1;
   out_8407074663770280591[331] = 0;
   out_8407074663770280591[332] = 0;
   out_8407074663770280591[333] = 0;
   out_8407074663770280591[334] = 0;
   out_8407074663770280591[335] = 0;
   out_8407074663770280591[336] = 0;
   out_8407074663770280591[337] = 0;
   out_8407074663770280591[338] = 0;
   out_8407074663770280591[339] = 0;
   out_8407074663770280591[340] = 0;
   out_8407074663770280591[341] = 0;
   out_8407074663770280591[342] = 0;
   out_8407074663770280591[343] = 0;
   out_8407074663770280591[344] = 0;
   out_8407074663770280591[345] = 0;
   out_8407074663770280591[346] = 0;
   out_8407074663770280591[347] = 0;
   out_8407074663770280591[348] = 0;
   out_8407074663770280591[349] = 0;
   out_8407074663770280591[350] = 0;
   out_8407074663770280591[351] = 0;
   out_8407074663770280591[352] = 1;
   out_8407074663770280591[353] = 0;
   out_8407074663770280591[354] = 0;
   out_8407074663770280591[355] = 0;
   out_8407074663770280591[356] = 0;
   out_8407074663770280591[357] = 0;
   out_8407074663770280591[358] = 0;
   out_8407074663770280591[359] = 0;
   out_8407074663770280591[360] = 0;
   out_8407074663770280591[361] = 0;
   out_8407074663770280591[362] = 0;
   out_8407074663770280591[363] = 0;
   out_8407074663770280591[364] = 0;
   out_8407074663770280591[365] = 0;
   out_8407074663770280591[366] = 0;
   out_8407074663770280591[367] = 0;
   out_8407074663770280591[368] = 0;
   out_8407074663770280591[369] = 0;
   out_8407074663770280591[370] = 0;
   out_8407074663770280591[371] = 0;
   out_8407074663770280591[372] = 0;
   out_8407074663770280591[373] = 0;
   out_8407074663770280591[374] = 1;
   out_8407074663770280591[375] = 0;
   out_8407074663770280591[376] = 0;
   out_8407074663770280591[377] = 0;
   out_8407074663770280591[378] = 0;
   out_8407074663770280591[379] = 0;
   out_8407074663770280591[380] = 0;
   out_8407074663770280591[381] = 0;
   out_8407074663770280591[382] = 0;
   out_8407074663770280591[383] = 0;
   out_8407074663770280591[384] = 0;
   out_8407074663770280591[385] = 0;
   out_8407074663770280591[386] = 0;
   out_8407074663770280591[387] = 0;
   out_8407074663770280591[388] = 0;
   out_8407074663770280591[389] = 0;
   out_8407074663770280591[390] = 0;
   out_8407074663770280591[391] = 0;
   out_8407074663770280591[392] = 0;
   out_8407074663770280591[393] = 0;
   out_8407074663770280591[394] = 0;
   out_8407074663770280591[395] = 0;
   out_8407074663770280591[396] = 1;
   out_8407074663770280591[397] = 0;
   out_8407074663770280591[398] = 0;
   out_8407074663770280591[399] = 0;
   out_8407074663770280591[400] = 0;
   out_8407074663770280591[401] = 0;
   out_8407074663770280591[402] = 0;
   out_8407074663770280591[403] = 0;
   out_8407074663770280591[404] = 0;
   out_8407074663770280591[405] = 0;
   out_8407074663770280591[406] = 0;
   out_8407074663770280591[407] = 0;
   out_8407074663770280591[408] = 0;
   out_8407074663770280591[409] = 0;
   out_8407074663770280591[410] = 0;
   out_8407074663770280591[411] = 0;
   out_8407074663770280591[412] = 0;
   out_8407074663770280591[413] = 0;
   out_8407074663770280591[414] = 0;
   out_8407074663770280591[415] = 0;
   out_8407074663770280591[416] = 0;
   out_8407074663770280591[417] = 0;
   out_8407074663770280591[418] = 1;
   out_8407074663770280591[419] = 0;
   out_8407074663770280591[420] = 0;
   out_8407074663770280591[421] = 0;
   out_8407074663770280591[422] = 0;
   out_8407074663770280591[423] = 0;
   out_8407074663770280591[424] = 0;
   out_8407074663770280591[425] = 0;
   out_8407074663770280591[426] = 0;
   out_8407074663770280591[427] = 0;
   out_8407074663770280591[428] = 0;
   out_8407074663770280591[429] = 0;
   out_8407074663770280591[430] = 0;
   out_8407074663770280591[431] = 0;
   out_8407074663770280591[432] = 0;
   out_8407074663770280591[433] = 0;
   out_8407074663770280591[434] = 0;
   out_8407074663770280591[435] = 0;
   out_8407074663770280591[436] = 0;
   out_8407074663770280591[437] = 0;
   out_8407074663770280591[438] = 0;
   out_8407074663770280591[439] = 0;
   out_8407074663770280591[440] = 1;
}
void h_4(double *state, double *unused, double *out_3054322920255068772) {
   out_3054322920255068772[0] = state[10] + state[13];
   out_3054322920255068772[1] = state[11] + state[14];
   out_3054322920255068772[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5193953318351477594) {
   out_5193953318351477594[0] = 0;
   out_5193953318351477594[1] = 0;
   out_5193953318351477594[2] = 0;
   out_5193953318351477594[3] = 0;
   out_5193953318351477594[4] = 0;
   out_5193953318351477594[5] = 0;
   out_5193953318351477594[6] = 0;
   out_5193953318351477594[7] = 0;
   out_5193953318351477594[8] = 0;
   out_5193953318351477594[9] = 0;
   out_5193953318351477594[10] = 1;
   out_5193953318351477594[11] = 0;
   out_5193953318351477594[12] = 0;
   out_5193953318351477594[13] = 1;
   out_5193953318351477594[14] = 0;
   out_5193953318351477594[15] = 0;
   out_5193953318351477594[16] = 0;
   out_5193953318351477594[17] = 0;
   out_5193953318351477594[18] = 0;
   out_5193953318351477594[19] = 0;
   out_5193953318351477594[20] = 0;
   out_5193953318351477594[21] = 0;
   out_5193953318351477594[22] = 0;
   out_5193953318351477594[23] = 0;
   out_5193953318351477594[24] = 0;
   out_5193953318351477594[25] = 0;
   out_5193953318351477594[26] = 0;
   out_5193953318351477594[27] = 0;
   out_5193953318351477594[28] = 0;
   out_5193953318351477594[29] = 0;
   out_5193953318351477594[30] = 0;
   out_5193953318351477594[31] = 0;
   out_5193953318351477594[32] = 0;
   out_5193953318351477594[33] = 1;
   out_5193953318351477594[34] = 0;
   out_5193953318351477594[35] = 0;
   out_5193953318351477594[36] = 1;
   out_5193953318351477594[37] = 0;
   out_5193953318351477594[38] = 0;
   out_5193953318351477594[39] = 0;
   out_5193953318351477594[40] = 0;
   out_5193953318351477594[41] = 0;
   out_5193953318351477594[42] = 0;
   out_5193953318351477594[43] = 0;
   out_5193953318351477594[44] = 0;
   out_5193953318351477594[45] = 0;
   out_5193953318351477594[46] = 0;
   out_5193953318351477594[47] = 0;
   out_5193953318351477594[48] = 0;
   out_5193953318351477594[49] = 0;
   out_5193953318351477594[50] = 0;
   out_5193953318351477594[51] = 0;
   out_5193953318351477594[52] = 0;
   out_5193953318351477594[53] = 0;
   out_5193953318351477594[54] = 0;
   out_5193953318351477594[55] = 0;
   out_5193953318351477594[56] = 1;
   out_5193953318351477594[57] = 0;
   out_5193953318351477594[58] = 0;
   out_5193953318351477594[59] = 1;
   out_5193953318351477594[60] = 0;
   out_5193953318351477594[61] = 0;
   out_5193953318351477594[62] = 0;
   out_5193953318351477594[63] = 0;
   out_5193953318351477594[64] = 0;
   out_5193953318351477594[65] = 0;
}
void h_9(double *state, double *unused, double *out_2537871891519615598) {
   out_2537871891519615598[0] = state[10];
   out_2537871891519615598[1] = state[11];
   out_2537871891519615598[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5965571820093626552) {
   out_5965571820093626552[0] = 0;
   out_5965571820093626552[1] = 0;
   out_5965571820093626552[2] = 0;
   out_5965571820093626552[3] = 0;
   out_5965571820093626552[4] = 0;
   out_5965571820093626552[5] = 0;
   out_5965571820093626552[6] = 0;
   out_5965571820093626552[7] = 0;
   out_5965571820093626552[8] = 0;
   out_5965571820093626552[9] = 0;
   out_5965571820093626552[10] = 1;
   out_5965571820093626552[11] = 0;
   out_5965571820093626552[12] = 0;
   out_5965571820093626552[13] = 0;
   out_5965571820093626552[14] = 0;
   out_5965571820093626552[15] = 0;
   out_5965571820093626552[16] = 0;
   out_5965571820093626552[17] = 0;
   out_5965571820093626552[18] = 0;
   out_5965571820093626552[19] = 0;
   out_5965571820093626552[20] = 0;
   out_5965571820093626552[21] = 0;
   out_5965571820093626552[22] = 0;
   out_5965571820093626552[23] = 0;
   out_5965571820093626552[24] = 0;
   out_5965571820093626552[25] = 0;
   out_5965571820093626552[26] = 0;
   out_5965571820093626552[27] = 0;
   out_5965571820093626552[28] = 0;
   out_5965571820093626552[29] = 0;
   out_5965571820093626552[30] = 0;
   out_5965571820093626552[31] = 0;
   out_5965571820093626552[32] = 0;
   out_5965571820093626552[33] = 1;
   out_5965571820093626552[34] = 0;
   out_5965571820093626552[35] = 0;
   out_5965571820093626552[36] = 0;
   out_5965571820093626552[37] = 0;
   out_5965571820093626552[38] = 0;
   out_5965571820093626552[39] = 0;
   out_5965571820093626552[40] = 0;
   out_5965571820093626552[41] = 0;
   out_5965571820093626552[42] = 0;
   out_5965571820093626552[43] = 0;
   out_5965571820093626552[44] = 0;
   out_5965571820093626552[45] = 0;
   out_5965571820093626552[46] = 0;
   out_5965571820093626552[47] = 0;
   out_5965571820093626552[48] = 0;
   out_5965571820093626552[49] = 0;
   out_5965571820093626552[50] = 0;
   out_5965571820093626552[51] = 0;
   out_5965571820093626552[52] = 0;
   out_5965571820093626552[53] = 0;
   out_5965571820093626552[54] = 0;
   out_5965571820093626552[55] = 0;
   out_5965571820093626552[56] = 1;
   out_5965571820093626552[57] = 0;
   out_5965571820093626552[58] = 0;
   out_5965571820093626552[59] = 0;
   out_5965571820093626552[60] = 0;
   out_5965571820093626552[61] = 0;
   out_5965571820093626552[62] = 0;
   out_5965571820093626552[63] = 0;
   out_5965571820093626552[64] = 0;
   out_5965571820093626552[65] = 0;
}
void h_10(double *state, double *unused, double *out_1988757008616586788) {
   out_1988757008616586788[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1988757008616586788[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1988757008616586788[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6693269377593792927) {
   out_6693269377593792927[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6693269377593792927[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6693269377593792927[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6693269377593792927[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6693269377593792927[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6693269377593792927[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6693269377593792927[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6693269377593792927[7] = 0;
   out_6693269377593792927[8] = 0;
   out_6693269377593792927[9] = 0;
   out_6693269377593792927[10] = 0;
   out_6693269377593792927[11] = 0;
   out_6693269377593792927[12] = 0;
   out_6693269377593792927[13] = 0;
   out_6693269377593792927[14] = 0;
   out_6693269377593792927[15] = 0;
   out_6693269377593792927[16] = 1;
   out_6693269377593792927[17] = 0;
   out_6693269377593792927[18] = 0;
   out_6693269377593792927[19] = 1;
   out_6693269377593792927[20] = 0;
   out_6693269377593792927[21] = 0;
   out_6693269377593792927[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6693269377593792927[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6693269377593792927[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6693269377593792927[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6693269377593792927[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6693269377593792927[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6693269377593792927[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6693269377593792927[29] = 0;
   out_6693269377593792927[30] = 0;
   out_6693269377593792927[31] = 0;
   out_6693269377593792927[32] = 0;
   out_6693269377593792927[33] = 0;
   out_6693269377593792927[34] = 0;
   out_6693269377593792927[35] = 0;
   out_6693269377593792927[36] = 0;
   out_6693269377593792927[37] = 0;
   out_6693269377593792927[38] = 0;
   out_6693269377593792927[39] = 1;
   out_6693269377593792927[40] = 0;
   out_6693269377593792927[41] = 0;
   out_6693269377593792927[42] = 1;
   out_6693269377593792927[43] = 0;
   out_6693269377593792927[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6693269377593792927[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6693269377593792927[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6693269377593792927[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6693269377593792927[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6693269377593792927[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6693269377593792927[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6693269377593792927[51] = 0;
   out_6693269377593792927[52] = 0;
   out_6693269377593792927[53] = 0;
   out_6693269377593792927[54] = 0;
   out_6693269377593792927[55] = 0;
   out_6693269377593792927[56] = 0;
   out_6693269377593792927[57] = 0;
   out_6693269377593792927[58] = 0;
   out_6693269377593792927[59] = 0;
   out_6693269377593792927[60] = 0;
   out_6693269377593792927[61] = 0;
   out_6693269377593792927[62] = 1;
   out_6693269377593792927[63] = 0;
   out_6693269377593792927[64] = 0;
   out_6693269377593792927[65] = 1;
}
void h_12(double *state, double *unused, double *out_8692366223190510689) {
   out_8692366223190510689[0] = state[0];
   out_8692366223190510689[1] = state[1];
   out_8692366223190510689[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8233334347326112227) {
   out_8233334347326112227[0] = 1;
   out_8233334347326112227[1] = 0;
   out_8233334347326112227[2] = 0;
   out_8233334347326112227[3] = 0;
   out_8233334347326112227[4] = 0;
   out_8233334347326112227[5] = 0;
   out_8233334347326112227[6] = 0;
   out_8233334347326112227[7] = 0;
   out_8233334347326112227[8] = 0;
   out_8233334347326112227[9] = 0;
   out_8233334347326112227[10] = 0;
   out_8233334347326112227[11] = 0;
   out_8233334347326112227[12] = 0;
   out_8233334347326112227[13] = 0;
   out_8233334347326112227[14] = 0;
   out_8233334347326112227[15] = 0;
   out_8233334347326112227[16] = 0;
   out_8233334347326112227[17] = 0;
   out_8233334347326112227[18] = 0;
   out_8233334347326112227[19] = 0;
   out_8233334347326112227[20] = 0;
   out_8233334347326112227[21] = 0;
   out_8233334347326112227[22] = 0;
   out_8233334347326112227[23] = 1;
   out_8233334347326112227[24] = 0;
   out_8233334347326112227[25] = 0;
   out_8233334347326112227[26] = 0;
   out_8233334347326112227[27] = 0;
   out_8233334347326112227[28] = 0;
   out_8233334347326112227[29] = 0;
   out_8233334347326112227[30] = 0;
   out_8233334347326112227[31] = 0;
   out_8233334347326112227[32] = 0;
   out_8233334347326112227[33] = 0;
   out_8233334347326112227[34] = 0;
   out_8233334347326112227[35] = 0;
   out_8233334347326112227[36] = 0;
   out_8233334347326112227[37] = 0;
   out_8233334347326112227[38] = 0;
   out_8233334347326112227[39] = 0;
   out_8233334347326112227[40] = 0;
   out_8233334347326112227[41] = 0;
   out_8233334347326112227[42] = 0;
   out_8233334347326112227[43] = 0;
   out_8233334347326112227[44] = 0;
   out_8233334347326112227[45] = 0;
   out_8233334347326112227[46] = 1;
   out_8233334347326112227[47] = 0;
   out_8233334347326112227[48] = 0;
   out_8233334347326112227[49] = 0;
   out_8233334347326112227[50] = 0;
   out_8233334347326112227[51] = 0;
   out_8233334347326112227[52] = 0;
   out_8233334347326112227[53] = 0;
   out_8233334347326112227[54] = 0;
   out_8233334347326112227[55] = 0;
   out_8233334347326112227[56] = 0;
   out_8233334347326112227[57] = 0;
   out_8233334347326112227[58] = 0;
   out_8233334347326112227[59] = 0;
   out_8233334347326112227[60] = 0;
   out_8233334347326112227[61] = 0;
   out_8233334347326112227[62] = 0;
   out_8233334347326112227[63] = 0;
   out_8233334347326112227[64] = 0;
   out_8233334347326112227[65] = 0;
}
void h_31(double *state, double *unused, double *out_1066015054762197490) {
   out_1066015054762197490[0] = state[7];
   out_1066015054762197490[1] = state[8];
   out_1066015054762197490[2] = state[9];
}
void H_31(double *state, double *unused, double *out_5487771315001098518) {
   out_5487771315001098518[0] = 0;
   out_5487771315001098518[1] = 0;
   out_5487771315001098518[2] = 0;
   out_5487771315001098518[3] = 0;
   out_5487771315001098518[4] = 0;
   out_5487771315001098518[5] = 0;
   out_5487771315001098518[6] = 0;
   out_5487771315001098518[7] = 1;
   out_5487771315001098518[8] = 0;
   out_5487771315001098518[9] = 0;
   out_5487771315001098518[10] = 0;
   out_5487771315001098518[11] = 0;
   out_5487771315001098518[12] = 0;
   out_5487771315001098518[13] = 0;
   out_5487771315001098518[14] = 0;
   out_5487771315001098518[15] = 0;
   out_5487771315001098518[16] = 0;
   out_5487771315001098518[17] = 0;
   out_5487771315001098518[18] = 0;
   out_5487771315001098518[19] = 0;
   out_5487771315001098518[20] = 0;
   out_5487771315001098518[21] = 0;
   out_5487771315001098518[22] = 0;
   out_5487771315001098518[23] = 0;
   out_5487771315001098518[24] = 0;
   out_5487771315001098518[25] = 0;
   out_5487771315001098518[26] = 0;
   out_5487771315001098518[27] = 0;
   out_5487771315001098518[28] = 0;
   out_5487771315001098518[29] = 0;
   out_5487771315001098518[30] = 1;
   out_5487771315001098518[31] = 0;
   out_5487771315001098518[32] = 0;
   out_5487771315001098518[33] = 0;
   out_5487771315001098518[34] = 0;
   out_5487771315001098518[35] = 0;
   out_5487771315001098518[36] = 0;
   out_5487771315001098518[37] = 0;
   out_5487771315001098518[38] = 0;
   out_5487771315001098518[39] = 0;
   out_5487771315001098518[40] = 0;
   out_5487771315001098518[41] = 0;
   out_5487771315001098518[42] = 0;
   out_5487771315001098518[43] = 0;
   out_5487771315001098518[44] = 0;
   out_5487771315001098518[45] = 0;
   out_5487771315001098518[46] = 0;
   out_5487771315001098518[47] = 0;
   out_5487771315001098518[48] = 0;
   out_5487771315001098518[49] = 0;
   out_5487771315001098518[50] = 0;
   out_5487771315001098518[51] = 0;
   out_5487771315001098518[52] = 0;
   out_5487771315001098518[53] = 1;
   out_5487771315001098518[54] = 0;
   out_5487771315001098518[55] = 0;
   out_5487771315001098518[56] = 0;
   out_5487771315001098518[57] = 0;
   out_5487771315001098518[58] = 0;
   out_5487771315001098518[59] = 0;
   out_5487771315001098518[60] = 0;
   out_5487771315001098518[61] = 0;
   out_5487771315001098518[62] = 0;
   out_5487771315001098518[63] = 0;
   out_5487771315001098518[64] = 0;
   out_5487771315001098518[65] = 0;
}
void h_32(double *state, double *unused, double *out_2582007418172209400) {
   out_2582007418172209400[0] = state[3];
   out_2582007418172209400[1] = state[4];
   out_2582007418172209400[2] = state[5];
   out_2582007418172209400[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2782746802099348581) {
   out_2782746802099348581[0] = 0;
   out_2782746802099348581[1] = 0;
   out_2782746802099348581[2] = 0;
   out_2782746802099348581[3] = 1;
   out_2782746802099348581[4] = 0;
   out_2782746802099348581[5] = 0;
   out_2782746802099348581[6] = 0;
   out_2782746802099348581[7] = 0;
   out_2782746802099348581[8] = 0;
   out_2782746802099348581[9] = 0;
   out_2782746802099348581[10] = 0;
   out_2782746802099348581[11] = 0;
   out_2782746802099348581[12] = 0;
   out_2782746802099348581[13] = 0;
   out_2782746802099348581[14] = 0;
   out_2782746802099348581[15] = 0;
   out_2782746802099348581[16] = 0;
   out_2782746802099348581[17] = 0;
   out_2782746802099348581[18] = 0;
   out_2782746802099348581[19] = 0;
   out_2782746802099348581[20] = 0;
   out_2782746802099348581[21] = 0;
   out_2782746802099348581[22] = 0;
   out_2782746802099348581[23] = 0;
   out_2782746802099348581[24] = 0;
   out_2782746802099348581[25] = 0;
   out_2782746802099348581[26] = 1;
   out_2782746802099348581[27] = 0;
   out_2782746802099348581[28] = 0;
   out_2782746802099348581[29] = 0;
   out_2782746802099348581[30] = 0;
   out_2782746802099348581[31] = 0;
   out_2782746802099348581[32] = 0;
   out_2782746802099348581[33] = 0;
   out_2782746802099348581[34] = 0;
   out_2782746802099348581[35] = 0;
   out_2782746802099348581[36] = 0;
   out_2782746802099348581[37] = 0;
   out_2782746802099348581[38] = 0;
   out_2782746802099348581[39] = 0;
   out_2782746802099348581[40] = 0;
   out_2782746802099348581[41] = 0;
   out_2782746802099348581[42] = 0;
   out_2782746802099348581[43] = 0;
   out_2782746802099348581[44] = 0;
   out_2782746802099348581[45] = 0;
   out_2782746802099348581[46] = 0;
   out_2782746802099348581[47] = 0;
   out_2782746802099348581[48] = 0;
   out_2782746802099348581[49] = 1;
   out_2782746802099348581[50] = 0;
   out_2782746802099348581[51] = 0;
   out_2782746802099348581[52] = 0;
   out_2782746802099348581[53] = 0;
   out_2782746802099348581[54] = 0;
   out_2782746802099348581[55] = 0;
   out_2782746802099348581[56] = 0;
   out_2782746802099348581[57] = 0;
   out_2782746802099348581[58] = 0;
   out_2782746802099348581[59] = 0;
   out_2782746802099348581[60] = 0;
   out_2782746802099348581[61] = 0;
   out_2782746802099348581[62] = 0;
   out_2782746802099348581[63] = 0;
   out_2782746802099348581[64] = 0;
   out_2782746802099348581[65] = 0;
   out_2782746802099348581[66] = 0;
   out_2782746802099348581[67] = 0;
   out_2782746802099348581[68] = 0;
   out_2782746802099348581[69] = 0;
   out_2782746802099348581[70] = 0;
   out_2782746802099348581[71] = 0;
   out_2782746802099348581[72] = 1;
   out_2782746802099348581[73] = 0;
   out_2782746802099348581[74] = 0;
   out_2782746802099348581[75] = 0;
   out_2782746802099348581[76] = 0;
   out_2782746802099348581[77] = 0;
   out_2782746802099348581[78] = 0;
   out_2782746802099348581[79] = 0;
   out_2782746802099348581[80] = 0;
   out_2782746802099348581[81] = 0;
   out_2782746802099348581[82] = 0;
   out_2782746802099348581[83] = 0;
   out_2782746802099348581[84] = 0;
   out_2782746802099348581[85] = 0;
   out_2782746802099348581[86] = 0;
   out_2782746802099348581[87] = 0;
}
void h_13(double *state, double *unused, double *out_5961185238884941771) {
   out_5961185238884941771[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5961185238884941771[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5961185238884941771[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4536921181361021519) {
   out_4536921181361021519[0] = 0;
   out_4536921181361021519[1] = 0;
   out_4536921181361021519[2] = 0;
   out_4536921181361021519[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4536921181361021519[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4536921181361021519[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4536921181361021519[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4536921181361021519[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4536921181361021519[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4536921181361021519[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4536921181361021519[10] = 0;
   out_4536921181361021519[11] = 0;
   out_4536921181361021519[12] = 0;
   out_4536921181361021519[13] = 0;
   out_4536921181361021519[14] = 0;
   out_4536921181361021519[15] = 0;
   out_4536921181361021519[16] = 0;
   out_4536921181361021519[17] = 0;
   out_4536921181361021519[18] = 0;
   out_4536921181361021519[19] = 0;
   out_4536921181361021519[20] = 0;
   out_4536921181361021519[21] = 0;
   out_4536921181361021519[22] = 0;
   out_4536921181361021519[23] = 0;
   out_4536921181361021519[24] = 0;
   out_4536921181361021519[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4536921181361021519[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4536921181361021519[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4536921181361021519[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4536921181361021519[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4536921181361021519[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4536921181361021519[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4536921181361021519[32] = 0;
   out_4536921181361021519[33] = 0;
   out_4536921181361021519[34] = 0;
   out_4536921181361021519[35] = 0;
   out_4536921181361021519[36] = 0;
   out_4536921181361021519[37] = 0;
   out_4536921181361021519[38] = 0;
   out_4536921181361021519[39] = 0;
   out_4536921181361021519[40] = 0;
   out_4536921181361021519[41] = 0;
   out_4536921181361021519[42] = 0;
   out_4536921181361021519[43] = 0;
   out_4536921181361021519[44] = 0;
   out_4536921181361021519[45] = 0;
   out_4536921181361021519[46] = 0;
   out_4536921181361021519[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4536921181361021519[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4536921181361021519[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4536921181361021519[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4536921181361021519[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4536921181361021519[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4536921181361021519[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4536921181361021519[54] = 0;
   out_4536921181361021519[55] = 0;
   out_4536921181361021519[56] = 0;
   out_4536921181361021519[57] = 0;
   out_4536921181361021519[58] = 0;
   out_4536921181361021519[59] = 0;
   out_4536921181361021519[60] = 0;
   out_4536921181361021519[61] = 0;
   out_4536921181361021519[62] = 0;
   out_4536921181361021519[63] = 0;
   out_4536921181361021519[64] = 0;
   out_4536921181361021519[65] = 0;
}
void h_14(double *state, double *unused, double *out_2537871891519615598) {
   out_2537871891519615598[0] = state[10];
   out_2537871891519615598[1] = state[11];
   out_2537871891519615598[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5965571820093626552) {
   out_5965571820093626552[0] = 0;
   out_5965571820093626552[1] = 0;
   out_5965571820093626552[2] = 0;
   out_5965571820093626552[3] = 0;
   out_5965571820093626552[4] = 0;
   out_5965571820093626552[5] = 0;
   out_5965571820093626552[6] = 0;
   out_5965571820093626552[7] = 0;
   out_5965571820093626552[8] = 0;
   out_5965571820093626552[9] = 0;
   out_5965571820093626552[10] = 1;
   out_5965571820093626552[11] = 0;
   out_5965571820093626552[12] = 0;
   out_5965571820093626552[13] = 0;
   out_5965571820093626552[14] = 0;
   out_5965571820093626552[15] = 0;
   out_5965571820093626552[16] = 0;
   out_5965571820093626552[17] = 0;
   out_5965571820093626552[18] = 0;
   out_5965571820093626552[19] = 0;
   out_5965571820093626552[20] = 0;
   out_5965571820093626552[21] = 0;
   out_5965571820093626552[22] = 0;
   out_5965571820093626552[23] = 0;
   out_5965571820093626552[24] = 0;
   out_5965571820093626552[25] = 0;
   out_5965571820093626552[26] = 0;
   out_5965571820093626552[27] = 0;
   out_5965571820093626552[28] = 0;
   out_5965571820093626552[29] = 0;
   out_5965571820093626552[30] = 0;
   out_5965571820093626552[31] = 0;
   out_5965571820093626552[32] = 0;
   out_5965571820093626552[33] = 1;
   out_5965571820093626552[34] = 0;
   out_5965571820093626552[35] = 0;
   out_5965571820093626552[36] = 0;
   out_5965571820093626552[37] = 0;
   out_5965571820093626552[38] = 0;
   out_5965571820093626552[39] = 0;
   out_5965571820093626552[40] = 0;
   out_5965571820093626552[41] = 0;
   out_5965571820093626552[42] = 0;
   out_5965571820093626552[43] = 0;
   out_5965571820093626552[44] = 0;
   out_5965571820093626552[45] = 0;
   out_5965571820093626552[46] = 0;
   out_5965571820093626552[47] = 0;
   out_5965571820093626552[48] = 0;
   out_5965571820093626552[49] = 0;
   out_5965571820093626552[50] = 0;
   out_5965571820093626552[51] = 0;
   out_5965571820093626552[52] = 0;
   out_5965571820093626552[53] = 0;
   out_5965571820093626552[54] = 0;
   out_5965571820093626552[55] = 0;
   out_5965571820093626552[56] = 1;
   out_5965571820093626552[57] = 0;
   out_5965571820093626552[58] = 0;
   out_5965571820093626552[59] = 0;
   out_5965571820093626552[60] = 0;
   out_5965571820093626552[61] = 0;
   out_5965571820093626552[62] = 0;
   out_5965571820093626552[63] = 0;
   out_5965571820093626552[64] = 0;
   out_5965571820093626552[65] = 0;
}
void h_33(double *state, double *unused, double *out_1863919135657502523) {
   out_1863919135657502523[0] = state[16];
   out_1863919135657502523[1] = state[17];
   out_1863919135657502523[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6735571693346609042) {
   out_6735571693346609042[0] = 0;
   out_6735571693346609042[1] = 0;
   out_6735571693346609042[2] = 0;
   out_6735571693346609042[3] = 0;
   out_6735571693346609042[4] = 0;
   out_6735571693346609042[5] = 0;
   out_6735571693346609042[6] = 0;
   out_6735571693346609042[7] = 0;
   out_6735571693346609042[8] = 0;
   out_6735571693346609042[9] = 0;
   out_6735571693346609042[10] = 0;
   out_6735571693346609042[11] = 0;
   out_6735571693346609042[12] = 0;
   out_6735571693346609042[13] = 0;
   out_6735571693346609042[14] = 0;
   out_6735571693346609042[15] = 0;
   out_6735571693346609042[16] = 1;
   out_6735571693346609042[17] = 0;
   out_6735571693346609042[18] = 0;
   out_6735571693346609042[19] = 0;
   out_6735571693346609042[20] = 0;
   out_6735571693346609042[21] = 0;
   out_6735571693346609042[22] = 0;
   out_6735571693346609042[23] = 0;
   out_6735571693346609042[24] = 0;
   out_6735571693346609042[25] = 0;
   out_6735571693346609042[26] = 0;
   out_6735571693346609042[27] = 0;
   out_6735571693346609042[28] = 0;
   out_6735571693346609042[29] = 0;
   out_6735571693346609042[30] = 0;
   out_6735571693346609042[31] = 0;
   out_6735571693346609042[32] = 0;
   out_6735571693346609042[33] = 0;
   out_6735571693346609042[34] = 0;
   out_6735571693346609042[35] = 0;
   out_6735571693346609042[36] = 0;
   out_6735571693346609042[37] = 0;
   out_6735571693346609042[38] = 0;
   out_6735571693346609042[39] = 1;
   out_6735571693346609042[40] = 0;
   out_6735571693346609042[41] = 0;
   out_6735571693346609042[42] = 0;
   out_6735571693346609042[43] = 0;
   out_6735571693346609042[44] = 0;
   out_6735571693346609042[45] = 0;
   out_6735571693346609042[46] = 0;
   out_6735571693346609042[47] = 0;
   out_6735571693346609042[48] = 0;
   out_6735571693346609042[49] = 0;
   out_6735571693346609042[50] = 0;
   out_6735571693346609042[51] = 0;
   out_6735571693346609042[52] = 0;
   out_6735571693346609042[53] = 0;
   out_6735571693346609042[54] = 0;
   out_6735571693346609042[55] = 0;
   out_6735571693346609042[56] = 0;
   out_6735571693346609042[57] = 0;
   out_6735571693346609042[58] = 0;
   out_6735571693346609042[59] = 0;
   out_6735571693346609042[60] = 0;
   out_6735571693346609042[61] = 0;
   out_6735571693346609042[62] = 1;
   out_6735571693346609042[63] = 0;
   out_6735571693346609042[64] = 0;
   out_6735571693346609042[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_54580470952589197) {
  H(in_vec, out_54580470952589197);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2331509198973380424) {
  err_fun(nom_x, delta_x, out_2331509198973380424);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8821701542344926915) {
  inv_err_fun(nom_x, true_x, out_8821701542344926915);
}
void live_H_mod_fun(double *state, double *out_9124059286284755301) {
  H_mod_fun(state, out_9124059286284755301);
}
void live_f_fun(double *state, double dt, double *out_2050961891249539931) {
  f_fun(state,  dt, out_2050961891249539931);
}
void live_F_fun(double *state, double dt, double *out_8407074663770280591) {
  F_fun(state,  dt, out_8407074663770280591);
}
void live_h_4(double *state, double *unused, double *out_3054322920255068772) {
  h_4(state, unused, out_3054322920255068772);
}
void live_H_4(double *state, double *unused, double *out_5193953318351477594) {
  H_4(state, unused, out_5193953318351477594);
}
void live_h_9(double *state, double *unused, double *out_2537871891519615598) {
  h_9(state, unused, out_2537871891519615598);
}
void live_H_9(double *state, double *unused, double *out_5965571820093626552) {
  H_9(state, unused, out_5965571820093626552);
}
void live_h_10(double *state, double *unused, double *out_1988757008616586788) {
  h_10(state, unused, out_1988757008616586788);
}
void live_H_10(double *state, double *unused, double *out_6693269377593792927) {
  H_10(state, unused, out_6693269377593792927);
}
void live_h_12(double *state, double *unused, double *out_8692366223190510689) {
  h_12(state, unused, out_8692366223190510689);
}
void live_H_12(double *state, double *unused, double *out_8233334347326112227) {
  H_12(state, unused, out_8233334347326112227);
}
void live_h_31(double *state, double *unused, double *out_1066015054762197490) {
  h_31(state, unused, out_1066015054762197490);
}
void live_H_31(double *state, double *unused, double *out_5487771315001098518) {
  H_31(state, unused, out_5487771315001098518);
}
void live_h_32(double *state, double *unused, double *out_2582007418172209400) {
  h_32(state, unused, out_2582007418172209400);
}
void live_H_32(double *state, double *unused, double *out_2782746802099348581) {
  H_32(state, unused, out_2782746802099348581);
}
void live_h_13(double *state, double *unused, double *out_5961185238884941771) {
  h_13(state, unused, out_5961185238884941771);
}
void live_H_13(double *state, double *unused, double *out_4536921181361021519) {
  H_13(state, unused, out_4536921181361021519);
}
void live_h_14(double *state, double *unused, double *out_2537871891519615598) {
  h_14(state, unused, out_2537871891519615598);
}
void live_H_14(double *state, double *unused, double *out_5965571820093626552) {
  H_14(state, unused, out_5965571820093626552);
}
void live_h_33(double *state, double *unused, double *out_1863919135657502523) {
  h_33(state, unused, out_1863919135657502523);
}
void live_H_33(double *state, double *unused, double *out_6735571693346609042) {
  H_33(state, unused, out_6735571693346609042);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
